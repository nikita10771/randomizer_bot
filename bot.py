# #!/usr/bin/python
#
# # This is a simple echo bot using the decorator mechanism.
# # It echoes any incoming text messages.
#
# import telebot
#
# API_TOKEN = '6975514591:AAHoIVGVBW3nbLHGhjbBN1Q1-EYHohTB11c'
#
# bot = telebot.TeleBot(API_TOKEN)
#
#
# # Handle '/start' and '/help'
# @bot.message_handler(commands=['help', 'start'])
# def send_welcome(message):
#     bot.reply_to(message, """\
# Hello! This is Randomaizer_bot by Ryan Gosling, it will help you choose random things.\
# """)
#
#
# # Handle all other messages with content_type 'text' (content_types defaults to ['text'])
# import random
#
# def randomize_option(option1, option2):
#     options = [option1, option2]
#     selected_option = random.choice(options)
#     return selected_option
#
# # Example usage
# option1 = "Option A"
# option2 = "Option B"
#
# selected_option = randomize_option(option1, option2)
# print("Selected option:", selected_option)
#
#
# bot.infinity_polling()

# import random
#
# def randomize_option(option1, option2):
#     options = [option1, option2]
#     selected_option = random.choice(options)
#     return selected_option
#
# # Example usage
# option1 = "Option A"
# option2 = "Option B"
#
# selected_option = randomize_option(option1, option2)
# print("Selected option:", selected_option)

import telebot
from telebot import types

bot = telebot.TeleBot('6975514591:AAHoIVGVBW3nbLHGhjbBN1Q1-EYHohTB11c')

@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–°–ü–ò–°–û–ö –ö–û–ú–ê–ù–î")
    markup.add(btn1)
    bot.send_message(message.from_user.id, '<b> üëã –ü—Ä–∏–≤–µ—Ç!–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –ø–∞–Ω–µ–ª–∏! </b> ', parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if message.text == '–°–ü–ò–°–û–ö –ö–û–ú–ê–ù–î':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton('–ö–∞–∫ —Å—Ç–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–º?')
        btn2 = types.KeyboardButton('–ü—É—Å—Ç–æ—Ç–∞')
        btn3 = types.KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.from_user.id, '‚ùì–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é‚ùì', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞


    elif message.text == '–ö–∞–∫ —Å—Ç–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–º?':
        bot.send_message(message.from_user.id, '–ù–∞–¥–æ –∫—É–ø–∏—Ç—å –∫—É—Ä—Å—ã —É –º–µ–Ω—è –≤ —Ç–≥, –º–æ–π –Ω–∏–∫ - @Official_Snakeee')

    elif message.text == '–ü—É—Å—Ç–æ—Ç–∞':
        bot.send_message(message.from_user.id, '–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.')

    elif message.text == '–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è':
        bot.send_message(message.from_user.id, '1) –ù–µ –±—ã—Ç—å –ø–∏–¥–æ—Ä–æ–º'
                                               '2) –ù–µ –±—ã—Ç—å –≥–∞–Ω–¥–æ–Ω–æ–º'
                                               '3) –ù–µ –±—ã—Ç—å –¥–æ—Ç–µ—Ä–æ–º')


bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å



# import telebot
# import random
# from telebot import types  # –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
#
# bot = telebot.TeleBot('6975514591:AAHoIVGVBW3nbLHGhjbBN1Q1-EYHohTB11c')  # Token –±–æ—Ç–∞ –±–µ—Ä—ë—Ç—Å—è –∏–∑ BotFather
#
#
# # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã Start
# @bot.message_handler(commands=['start'])
# def welcome(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     random_sender = types.KeyboardButton("–°–∫–∏–Ω—å –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
#     markup.add(random_sender)
#     bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –æ—Ç –†–∞–π–∞–Ω–∞ –ì–æ—Å–ª–∏–Ω–≥–∞ –∏ –ö–∏–ª–ª–∏–∞–Ω–∞ –ú—ë—Ä—Ñ–∏. –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –Ω–µ —É–º–µ—Ä–µ—Ç—å –æ—Ç —Å–∫—É–∫–∏. </b> ', parse_mode='html',
#                      reply_markup=markup)
#
#
# # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–∫–∏
# @bot.message_handler(content_types=['text'])
#
#
# def first_number_step(message):
#     if message.text == '–°–∫–∏–Ω—å –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
#         msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞')
#         bot.register_next_step_handler(msg, second_number_step)             # –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é second_number_step
#     else:
#         bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç')
#
#
# # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
# def second_number_step(message):
#     global NUM_first
#     NUM_first = int(message.text)
#     msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞')
#     bot.register_next_step_handler(msg, result_number_step)                 # –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é result_number_step
#
#
# # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
# def result_number_step(message):
#     global NUM_second
#     NUM_second = int(message.text)
#     result(message)                                                          # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ result(message)
#
#
# # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—Ä–∞–Ω–¥–æ–º)
# def result(message):
#     bot.send_message(message.chat.id, '–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ:  ' + str(random.randint(NUM_first, NUM_second)))
#
#
# #Run
# bot.polling(none_stop=True)